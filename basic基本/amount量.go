package mian

/* 变量和常量
命名规则:
1) 字母,数字,下划线
2) 不能以数字开头
3) 不能使用关键字
4) 区分大小写
*/
import (
	"fmt"
)

func test() (a, b, c int) { //构建test函数,返回值为1,2,3
	return 1, 2, 3
}
func main() {
	/*
	   变量的原则:
	   	1) 声明之后的变量必须要使用
	   	2) 没有初始化(赋值)的变量值为0
	   	3) 同一个{}内,声明的变量名称不能重复
	   变量的声明格式:
	   	1) 标准格式 (var关键字 变量名称 数据类型 = 值)
	   		var a,b,c int =1,2,3   声明并赋值(多个变量用,隔开)
	   		或声明后赋值:
	   		a=1
	   		b=2
	   		c=3
	   		a,b,c=1,2,3
	   	2) 自动推导类型格式 (省略var关键字!变量名称 := 值 ,通过初始化的值自动确定类型)
	   		a,b,c := 1,2,3     声明并赋值(多个变量用,隔开)
	   	3) 交换两个变量的值
	   		a,b = b,c  结果为a = b,b =c
	   	4)匿名变量 "_"  (多在当函数(方法)有多个返回值时使用)
	   		func test(a,b,c int){ 构建test函数,返回值为1,2,3
	   			return 1,2,3
	   			}
	   		_,_,c = test()   当只取函数的第三个值时,前两个变量名使用_,系统将不会处理1,2
	   		c = 3  (结果)*/
	var a, b, c = 1, 2, 3 //标准格式
	d, e, f := 4, 5, 6    //推导格式
	a, f = f, a           //交换a和f的值
	_, _, b = test()      //使用匿名变量取test的第三个返回值
	fmt.Printf("a=%d,b=%d,c=%d,d=%d,e=%d,f=%d\n", a, b, c, d, e, f)
	//打印结果为a=6,b=3,c=3,d=4,e=5,f=1
	/*常量的规则:
	1) 常量可以被使用不能被改变
	  常量的声明格式:
	1) 标准格式 (const关键字 常量名称 数据类型 = 值)
	const g int = 30
	const g,h,i int = 11,12,13   一次声明并赋值多个常量
	2) 自动推导类型格式(const关键字 常量名称 = 值)
	const i =1				不声明数据类型即自动推导类型
	const j,k = 21,22,23   一次声明并赋值多个常量
	*/
	const g int = 30
	const h = 40
	const i, j, k = 1, 2, 3
	fmt.Printf("g=%d,h=%d,i=%d,j=%d,k=%d\n", g, h, i, j, k)
	/*同时声明多个不同类型的量并赋值
	格式:
	关键字(量名 = 值)
	*/
	var (
		aa = 1    //自动推导为int类型
		bb = 3.14 //自动推导为float64类型
	)
	const (
		cc = 1    //推导为int类型
		dd = 3.14 //推导float64类型
	)
	/*布尔类型的声明
	1) 标准格式*/
	var a1 bool
	a1 = true
	/*	2) 自动推导格式 */
	var a2 = false
	/* 或者(常用!)*/
	a3 := false

	fmt.Printf("aa=%T,bb=%T,cc=%T,dd=%T,a1=%t,a2=%t,a3=%t\n", aa, bb, cc, dd, a1, a2, a3) //打印出数据类型
}
